{"version":3,"file":"library.mjs","sources":["../../../projects/library/src/lib/classes/ag-vs-render-event.class.ts","../../../projects/library/src/lib/ag-vs-item/ag-vs-item.component.ts","../../../projects/library/src/lib/ag-vs-item/ag-vs-item.component.html","../../../projects/library/src/lib/pipes/sticked-classes.pipe.ts","../../../projects/library/src/lib/ag-virtual-scroll.component.ts","../../../projects/library/src/lib/ag-virtual-scroll.component.html","../../../projects/library/src/lib/pipes/math-abs.pipe.ts","../../../projects/library/src/lib/ag-virtual-scroll.module.ts","../../../projects/library/src/library.ts"],"sourcesContent":["export class AgVsRenderEvent<T> {\n    public items: T[];\n    public startIndex: number;\n    public endIndex: number;\n    public length: number;\n\n    constructor(obj: Partial<AgVsRenderEvent<T>>) {\n        Object.assign(this, obj);\n    }\n}","import { Component, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, OnInit, HostBinding, ApplicationRef, ViewChild, TemplateRef, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'ag-vs-item',\n\ttemplateUrl: './ag-vs-item.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }\n        \n        :host > ng-template {\n            display: inherit;\n            width: inherit;\n            height: inherit;\n        }`\n    ]\n})\nexport class AgVsItemComponent implements OnInit, AfterViewInit, OnChanges {\n    @HostBinding('class.ag-vs-item') public class: boolean = true;\n\n    @ViewChild('temp', {static: false}) public temp: TemplateRef<any>;\n\n    @Input('sticky') public sticky: boolean = false;\n\n    public get el() { return this.elRef && this.elRef.nativeElement; }\n\n    public viewOk: boolean = false;\n\n    public onStickyChange = new EventEmitter<boolean>(false);\n\n    public isSticked: boolean = false;\n\n    constructor(\n        public elRef: ElementRef<HTMLElement>,\n        public appRef: ApplicationRef\n\t) {\n    }\n    \n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\t\n\tngOnChanges(changes: SimpleChanges) {\n        if ('sticky' in changes)\n            this.onStickyChange.next(this.sticky);\n    }\n\n    public forceUpdateInputs() {\n        this.viewOk = false;\n        this.appRef.tick();\n        this.viewOk = true;\n    }\n\n    public getHtml() {\n       return this.el.outerHTML;\n    }\n}\n","<ng-template #temp>\n    <ng-content></ng-content>\n</ng-template>\n\n<ng-container *ngIf=\"!isSticked\" [ngTemplateOutlet]=\"temp\"></ng-container>","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n   name: 'stickedClasses'\n})\nexport class StickedClassesPipe implements PipeTransform {\n\n   private exceptionClasses: string[] = [\n      'ag-virtual-scroll-odd',\n      'ag-virtual-scroll-even',\n   ];\n\n   constructor() {}\n\n   transform(classes: string) {\n      if (classes) {\n         let splitted = classes.includes(' ') ? classes.split(' ') : [classes];\n         return splitted.filter(className => !this.exceptionClasses.some(exc => exc === className)).join(' ');\n      }\n      return '';\n   }\n}","import { Component, Input, ElementRef, ViewChild, AfterViewInit, OnChanges, SimpleChanges, Renderer2, OnInit, Output, EventEmitter, QueryList, ContentChildren, AfterContentChecked, OnDestroy } from '@angular/core';\nimport { AgVsRenderEvent } from './classes/ag-vs-render-event.class';\nimport { AgVsItemComponent } from './ag-vs-item/ag-vs-item.component';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n\tselector: 'ag-virtual-scroll',\n\ttemplateUrl: './ag-virtual-scroll.component.html',\n    styles: [`\n        :host {\n            display: block;\n            position: relative;\n            width: 100%;\n            overflow-y: auto;\n        }\n\n        :host .content-height {\n            width: 1px;\n            opacity: 0;\n        }\n\n        :host .items-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n        }\n\n        :host::ng-deep .items-container.sticked-outside > .ag-vs-item:last-child {\n            position: absolute;\n            top: 0;\n            left: -100%;\n        }\n\n        :host::ng-deep > .ag-vs-item {\n            position: absolute;\n            top: 0;\n            left: 0;\n            box-shadow: 0 5px 5px rgba(0, 0, 0, .1);\n            background: #FFF;\n        }`\n    ]\n})\nexport class AgVirtualSrollComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, AfterContentChecked {\n    @ViewChild('itemsContainer', {static: true}) private itemsContainerElRef: ElementRef<HTMLElement>;\n\n    @ContentChildren(AgVsItemComponent) private queryVsItems: QueryList<AgVsItemComponent>;\n\n    @Input('min-row-height') public minRowHeight: number = 40;\n    @Input('height') public height: string = 'auto';\n    @Input('items') public originalItems: any[] = [];\n\n    @Output() private onItemsRender = new EventEmitter<AgVsRenderEvent<any>>();\n\n    public prevOriginalItems: any[] = [];\n    public items: any[] = [];\n\n    private subscripAllVsItem: { comp: AgVsItemComponent, subscrip: Subscription }[] = [];\n\n    private _indexCurrentSticky: number = -1;\n    private get indexCurrentSticky() { return this._indexCurrentSticky; }\n    private set indexCurrentSticky(value: number) {\n        this._indexCurrentSticky = value;\n\n        let currentIsPrev = value === this.indexPrevSticky;\n\n        if (!currentIsPrev && value >= 0) {\n            this.findCurrentStickyByIndex();\n        }\n        else {\n            if (!currentIsPrev)\n                this.indexNextSticky = -1;\n\n            if (this.currentStickyItem)\n                this.currentStickyItem.comp.isSticked = false;\n            \n            this.currentStickyItem = null;\n        }\n\n        this.prepareDataItems();\n    }\n    \n    private get indexPrevSticky() { return this.indexesPrevStick.length ? this.indexesPrevStick[0] : -1; }\n    private set indexPrevSticky(value: number) {\n        if (value < 0) {\n            if (this.indexesPrevStick.length > 0)\n                this.indexesPrevStick = this.indexesPrevStick.slice(1);\n        }\n        else if (!this.indexesPrevStick.some(index => index === value))\n            this.indexesPrevStick.push(value);\n\n        if (this.indexesPrevStick.length)\n            this.indexesPrevStick = this.indexesPrevStick.sort((a,b) => b-a);\n    }\n\n    private indexNextSticky: number | null | undefined = -1;\n\n    private indexesPrevStick: number[] = [];\n\n    public currentStickyItem: StickyItem | null | undefined;\n\n    public currentScroll: number = 0;\n    public contentHeight: number = 0;\n    public paddingTop: number = 0;\n\n    public startIndex: number = 0;\n    public endIndex: number = 0;\n\n    private isTable: boolean = false;\n\n    private scrollIsUp: boolean = false;\n    private lastScrollIsUp: boolean = false;\n    \n    private previousItemsHeight: number[] = [];\n\n    public containerWidth: number = 0;\n\n    private get itemsNoSticky() { return this.currentStickyItem ? this.items.filter((item) => this.originalItems[this.currentStickyItem!.index] !== item) : this.items; }\n\n    public get vsItems() { return (this.queryVsItems && this.queryVsItems.toArray()) || []; }\n\n    public get numberItemsRendred(): number { return this.endIndex - this.startIndex; }\n    \n    public get el() { return this.elRef && this.elRef.nativeElement; }\n\n    public get itemsContainerEl() { return this.itemsContainerElRef && this.itemsContainerElRef.nativeElement; }\n    \n    constructor(\n        private elRef: ElementRef<HTMLElement>,\n        private renderer: Renderer2\n\t) {\n\t}\n\n    ngAfterViewInit() {\n        this.queryVsItems.changes.subscribe(() => this.checkStickItem(this.scrollIsUp));\n\t}\n\n    ngOnInit() {\n        this.renderer.listen(this.el, 'scroll', this.onScroll.bind(this));\n        this.onScroll();\n\t}\n\t\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsetTimeout(() => {\n            if ('height' in changes) {\n                this.el.style.maxHeight = this.height;\n            }\n\n            if ('minRowHeight' in changes) {\n                if (typeof this.minRowHeight === 'string') {\n                    if (parseInt(this.minRowHeight))\n                        this.minRowHeight = parseInt(this.minRowHeight);\n                    else {\n                        console.warn('The [min-row-height] @Input is invalid, the value must be of type \"number\".')\n                        this.minRowHeight = 40;\n                    }\n                }\n            }\n\n\t\t\tif ('originalItems' in changes) {\n                if (!this.originalItems)\n                    this.originalItems = [];\n\n                if (this.currentAndPrevItemsAreDiff()) {\n                    this.previousItemsHeight = new Array(this.originalItems.length).fill(null);\n                \n                    if (this.el.scrollTop !== 0)\n                        this.el.scrollTop = 0;\n                    else {\n                        this.currentScroll = 0;\n                        this.prepareDataItems();\n                        this.checkIsTable();\n                        this.queryVsItems.notifyOnChanges();\n                    }\n                }\n                else {\n                    if (this.originalItems.length > this.prevOriginalItems.length)\n                        this.previousItemsHeight = this.previousItemsHeight.concat(new Array(this.originalItems.length - this.prevOriginalItems.length).fill(null));\n                \n                    this.prepareDataItems();\n                    this.checkIsTable();\n                    this.queryVsItems.notifyOnChanges();\n                }\n\n                this.prevOriginalItems = this.originalItems;\n\t\t\t}\n\t\t});\n    }\n\n    ngAfterContentChecked() {\n        let currentContainerWidth = this.itemsContainerEl && this.itemsContainerEl.clientWidth;\n        if (currentContainerWidth !== this.containerWidth)\n            this.containerWidth = currentContainerWidth;\n        \n        this.manipuleRenderedItems();\n    }\n\n    private currentAndPrevItemsAreDiff() {\n        if (this.originalItems.length >= this.prevOriginalItems.length) {\n            let begin = 0;\n            let end = this.prevOriginalItems.length - 1;\n            for (let i = begin; i <= end; i++) {\n                if (this.originalItems[i] !== this.prevOriginalItems[i])\n                    return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n\tpublic onScroll() {\n        this.refreshData();\n    }\n\n\tpublic refreshData() {\n        let up = this.el.scrollTop < this.currentScroll;\n        this.currentScroll = this.el.scrollTop;\n\n        this.prepareDataItems();\n        this.isTable = this.checkIsTable();\n        this.lastScrollIsUp = this.scrollIsUp;\n        this.scrollIsUp = up;\n    }\n\n    private prepareDataItems() {\n        this.registerCurrentItemsHeight();\n        this.prepareDataVirtualScroll();\n    }\n\n    private registerCurrentItemsHeight() {\n        let children = this.getInsideChildrens();\n        for (let i = 0; i < children.length; i++) {\n            let child = children[i];\n            let realIndex = this.startIndex + i;\n            this.previousItemsHeight[realIndex] = child.getBoundingClientRect().height;\n        }\n    }\n\n    private getDimensions() {\n        \n        let dimensions = {\n            contentHeight: 0,\n            paddingTop: 0,\n            itemsThatAreGone: 0\n        };\n        \n        dimensions.contentHeight = this.originalItems.reduce((prev, curr, i) => {\n\t\t\tlet height = this.previousItemsHeight[i];\n\t\t\treturn prev + (height ? height : this.minRowHeight);\n        }, 0);\n\n        if (this.currentScroll >= this.minRowHeight) {\n            let newPaddingTop = 0;\n            let itemsThatAreGone = 0;\n            let initialScroll = this.currentScroll;\n            \n            for (let h of this.previousItemsHeight) {\n                let height = h ? h : this.minRowHeight;\n                if (initialScroll >= height) {\n                    newPaddingTop += height;\n                    initialScroll -= height;\n                    itemsThatAreGone++;\n                }\n                else\n                    break;\n            }\n            \n            dimensions.paddingTop = newPaddingTop;\n            dimensions.itemsThatAreGone = itemsThatAreGone;\n        }\n\n        return dimensions;\n    }\n    \n    private prepareDataVirtualScroll() {\n        let dimensions = this.getDimensions();\n        \n        this.contentHeight = dimensions.contentHeight;\n        this.paddingTop = dimensions.paddingTop;\n        this.startIndex = dimensions.itemsThatAreGone;\n        this.endIndex = Math.min((this.startIndex + this.numberItemsCanRender()), (this.originalItems.length - 1));\n\n        if (this.indexCurrentSticky >= 0 && (this.startIndex > this.indexCurrentSticky || this.endIndex < this.indexCurrentSticky)) {\n            if (this.currentStickyItem)\n                this.currentStickyItem.outside = true;\n            this.items = [ ...this.originalItems.slice(this.startIndex, Math.min(this.endIndex + 1, this.originalItems.length)), this.originalItems[this.indexCurrentSticky] ];\n        }\n        else {\n            if (this.currentStickyItem)\n                this.currentStickyItem.outside = false;\n            this.items = this.originalItems.slice(this.startIndex, Math.min(this.endIndex + 1, this.originalItems.length));\n        }\n\n        this.onItemsRender.emit(new AgVsRenderEvent<any>({\n            items: this.itemsNoSticky,\n            startIndex: this.startIndex,\n            endIndex: this.endIndex,\n            length: this.itemsNoSticky.length\n        }));\n                \n        this.manipuleRenderedItems();\n    }\n\n    private numberItemsCanRender() {\n        return Math.floor(this.el.clientHeight / this.minRowHeight) + 2;\n    }\n\n    private manipuleRenderedItems() {\n        let children = this.getInsideChildrens();\n        for (let i = 0; i < children.length; i++) {\n            let child = children[i] as HTMLElement;\n            if (child.style.display !== 'none') {\n                let realIndex = this.startIndex + i;\n                child.style.minHeight = `${this.minRowHeight}px`;\n                \n                let className = (realIndex + 1) % 2 === 0 ? 'even' : 'odd';\n                let unclassName = className == 'even' ? 'odd' : 'even';\n\n                child.classList.add(`ag-virtual-scroll-${className}`);\n                child.classList.remove(`ag-virtual-scroll-${unclassName}`);\n            }\n        }\n    }\n\n    private getInsideChildrens(): HTMLCollection {\n        let childrens = this.itemsContainerEl.children;\n        if (childrens.length > 0) {\n            if (childrens[0].tagName.toUpperCase() === 'TABLE') {\n                childrens = childrens[0].children;\n                if (childrens.length > 0) {\n                    if (childrens[0].tagName.toUpperCase() === 'TBODY')\n                        childrens = childrens[0].children;\n                    else\n                        childrens = childrens[1].children;\n                }\n            }\n        }\n\n        return childrens;\n    }\n\n    private checkIsTable() {\n        let childrens = this.itemsContainerEl.children;\n        if (childrens.length > 0) {\n            if (childrens[0].tagName.toUpperCase() === 'TABLE') {\n                childrens = childrens[0].children;\n                if (childrens.length > 0) {\n                    if (childrens[0].tagName.toUpperCase() === 'THEAD'){\n                        let thead = childrens[0] as HTMLElement;\n                        thead.style.transform = `translateY(${Math.abs(this.paddingTop - this.currentScroll)}px)`;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private checkStickItem(up: boolean) {\n        if (!this.isTable && this.vsItems.length > 0) {\n            this.updateVsItems().subscribe(() => {\n                if (this.indexCurrentSticky >= 0) {\n\n                    if (!this.currentStickyItem) {\n                        this.findCurrentStickyByIndex(true);\n                        return;\n                    }\n\n                    if (this.indexNextSticky === -1)\n                        this.indexNextSticky = this.getIndexNextSticky(up);\n    \n                    if (this.currentStickIsEnded(up)) {\n                        if (!up) {\n                            this.indexPrevSticky = this.indexCurrentSticky;\n                            this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n                            this.indexNextSticky = this.getIndexNextSticky(up);\n                        }\n                        else {\n                            if (this.indexPrevSticky >= 0) {\n                                this.setPrevAsCurrentSticky();\n                            }\n                            else {\n                                this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n\n                                if (this.indexCurrentSticky >= 0)\n                                    this.indexNextSticky = this.getIndexNextSticky(up);\n                                else\n                                    this.indexNextSticky = null;\n                            }\n                        }\n                    }\n                }  \n                else {\n                    this.indexCurrentSticky = this.getIndexCurrentSticky(up);\n                    this.indexNextSticky = this.getIndexNextSticky(up);\n                }        \n            });\n        }\n        else {\n            this.indexCurrentSticky = -1;\n            this.indexNextSticky = -1;\n        }\n    }\n\n    private findCurrentStickyByIndex(afterPrev: boolean = false): void {\n        let vsIndex = 0;\n        let lastVsIndex = this.vsItems.length - 1;\n        let diffMaxItemsRender = this.vsItems.length - this.numberItemsCanRender();\n\n        if (diffMaxItemsRender > 0 && !this.vsItems.some((vsItem, vsIndex) => this.indexCurrentSticky === (this.startIndex + vsIndex))) {\n            vsIndex = lastVsIndex;\n            let vsItem = this.vsItems[lastVsIndex];\n            let index = this.indexCurrentSticky;\n            let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n            vsItem.isSticked = true;\n            this.currentStickyItem = new StickyItem({\n                comp: vsItem,\n                index: index,\n                vsIndex: vsIndex,\n                offsetTop: offsetTop,\n                height: vsItem.el.offsetHeight,\n                outside: true\n            });\n        }\n        else {\n            for(let vsItem of this.vsItems) {\n                let index = this.startIndex + vsIndex;\n\n                if (this.indexCurrentSticky === index) {\n                    let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n                    vsItem.isSticked = true;\n                    this.currentStickyItem = new StickyItem({\n                        comp: vsItem,\n                        index: index,\n                        vsIndex: vsIndex,\n                        offsetTop: offsetTop,\n                        height: vsItem.el.offsetHeight\n                    });\n                    break;\n                }\n                \n                vsIndex++;\n            }\n        }\n\n        if (afterPrev && this.currentStickyItem) {\n            let currentHeight = this.currentStickyItem.height;\n            let offsetBottom = this.paddingTop + currentHeight + Math.abs(this.el.scrollTop - this.paddingTop);\n            let offsetTopNext = (this.indexNextSticky ?? 0) >= 0 ? this.previousItemsHeight.slice(0, this.indexNextSticky ?? 0).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0) : null;\n            \n            if (offsetTopNext !== null && offsetBottom >= offsetTopNext) {\n                let newDiffTop = offsetBottom - offsetTopNext;\n                if (newDiffTop >= currentHeight) {\n                    this.currentStickyItem.diffTop = currentHeight;\n                    return;\n                }\n                else\n                    this.currentStickyItem.diffTop = newDiffTop;\n            } \n            else\n                this.currentStickyItem.diffTop = 0;\n        }\n        \n    }\n\n    private setPrevAsCurrentSticky() {\n        let currentSticked = this.currentStickyItem && this.currentStickyItem.comp.sticky;\n\n        if (currentSticked) \n            this.indexNextSticky = this.indexCurrentSticky;\n\n        this.indexCurrentSticky = this.indexPrevSticky;\n        this.indexPrevSticky = -1;\n    }\n\n    private getIndexCurrentSticky(up: boolean) {\n        let vsIndex = 0;\n        for (let vsItem of this.vsItems) {\n            let index = vsIndex + this.startIndex;\n\n            let offsetTop = this.previousItemsHeight.slice(0, index).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0);\n            \n            if (vsItem && vsItem.sticky &&\n                this.el.scrollTop >= offsetTop &&\n                (this.indexCurrentSticky === -1 || index !== this.indexCurrentSticky)\n            )\n                return index;\n\n            vsIndex++;\n        };\n        \n        return -1;\n    }\n\n    private getIndexNextSticky(up: boolean) {\n        if (this.indexCurrentSticky >= 0) {\n            let vsIndex = 0;\n\n            for (let vsItem of this.vsItems.slice(0, this.numberItemsCanRender())) {\n                let index = vsIndex + this.startIndex;\n\n                if (vsItem.sticky && index > this.indexCurrentSticky)\n                    return index;\n\n                vsIndex++;\n            }\n        }\n\n        return -1;\n    }\n\n    private currentStickIsEnded(up: boolean) {\n        let currentHeight = this.currentStickyItem?.height ?? 0;\n        \n        if (!up || (this.currentStickyItem?.diffTop ?? 0) > 0) {\n            let offsetBottom = this.paddingTop + currentHeight + Math.abs(this.el.scrollTop - this.paddingTop);\n            let offsetTopNext = this.indexNextSticky! >= 0 ? this.previousItemsHeight.slice(0, this.indexNextSticky!).reduce((prev, curr) => (prev + (curr ? curr : this.minRowHeight)), 0) : null;\n            \n            if (offsetTopNext !== null && offsetBottom >= offsetTopNext) {\n                let newDiffTop = offsetBottom - offsetTopNext;\n                if (newDiffTop >= currentHeight) {\n                    this.currentStickyItem!.diffTop = currentHeight;\n                    return true;\n                }\n                else\n                    this.currentStickyItem!.diffTop = newDiffTop;\n            } \n            else\n                this.currentStickyItem!.diffTop = 0;\n        }\n        else {\n            let offsetBottom = this.paddingTop + Math.abs(this.el.scrollTop - this.paddingTop);\n            if (offsetBottom <= this.currentStickyItem!.offsetTop) {\n                return true;\n            } \n        }\n\n        return false;\n    }\n\n    private updateVsItems() {\n        return new Observable<void>((subscriber) => {\n            if (this.subscripAllVsItem.length) {\n                this.subscripAllVsItem.forEach((item) => item.subscrip.unsubscribe());\n                this.subscripAllVsItem = [];\n            }\n\n            let interval = setInterval(() => {\n                let diffMaxItemsRender = this.vsItems.length - this.numberItemsCanRender();\n                let lastIndex = this.vsItems.length - 1;\n                let ok = this.vsItems.every((vsItem, vsIndex) => {\n                    let index = this.startIndex + vsIndex;\n\n                    if (diffMaxItemsRender > 0 && vsIndex === lastIndex)\n                        index = this.indexCurrentSticky;\n\n                    if (!this.currentStickyItem || vsItem !== this.currentStickyItem.comp)\n                        vsItem.isSticked = false;\n\n                    if (!this.subscripAllVsItem.some(item => item.comp === vsItem))\n                        this.subscripAllVsItem.push({\n                            comp: vsItem,\n                            subscrip: vsItem.onStickyChange.subscribe((sticky) => {\n                                this.onStickyComponentChanged(vsItem, index);\n                            })\n                        });\n\n                    try { vsItem.forceUpdateInputs(); }\n                    catch { return false; }\n\n                    return true;\n                });\n\n                if (ok) {\n                    clearInterval(interval);\n                    this.manipuleRenderedItems();\n                    subscriber.next();\n                }\n            });\n        });\n    }\n\n    private onStickyComponentChanged(vsItem: AgVsItemComponent, index: number) {\n        if (index === this.indexCurrentSticky) {\n            if (!vsItem.sticky) {\n                if (this.indexPrevSticky >= 0) {\n                    this.setPrevAsCurrentSticky();\n                }\n                else {\n                    this.indexCurrentSticky = this.getIndexCurrentSticky(false);\n\n                    if (this.indexCurrentSticky >= 0)\n                        this.indexNextSticky = this.getIndexNextSticky(false);\n                    else\n                        this.indexNextSticky = null;\n                }\n            }\n        }\n        else if ((this.indexCurrentSticky !== -1 && index < this.indexCurrentSticky) || index === this.indexPrevSticky) {\n            if (vsItem.sticky)\n                this.indexPrevSticky = index;\n            else\n                this.indexesPrevStick = this.indexesPrevStick.filter(indexPrev => indexPrev !== index);\n        }\n        else if ((this.indexCurrentSticky !== -1 && index > this.indexCurrentSticky) || index === this.indexNextSticky) {\n            if (vsItem.sticky && (this.indexNextSticky === -1 || index < this.indexNextSticky!))\n                this.indexNextSticky = index;\n            else if (!vsItem.sticky)\n                this.indexNextSticky = -1;\n        }\n        else\n            return;\n\n        this.queryVsItems.notifyOnChanges();\n    }\n\n    ngOnDestroy() {\n    }\n}\n\n\nexport class StickyItem {\n    comp: AgVsItemComponent;\n    index: number;\n    offsetTop: number = 0;\n    vsIndex: number;\n    diffTop: number = 0;\n    isUp: boolean = false\n    height: number = 0;\n    outside: boolean = false;\n\n    constructor(obj?: Partial<StickyItem>) {\n        if (obj) Object.assign(this, obj);\n    }\n}\n","<div class=\"content-height\" [style.height.px]=\"contentHeight\"></div>\n<div #itemsContainer class=\"items-container\" [style.transform]=\"'translateY(' + paddingTop + 'px)'\" [ngClass]=\"{ 'sticked-outside': currentStickyItem?.outside }\">\n    <ng-content></ng-content>\n</div>\n<ag-vs-item *ngIf=\"currentStickyItem?.comp && currentStickyItem.comp.isSticked\"\n    [class]=\"currentStickyItem.comp.el.classList.value | stickedClasses\"\n    [style.top.px]=\"currentScroll - (currentStickyItem.diffTop ? currentStickyItem.diffTop : 0)\"\n    [style.height.px]=\"currentStickyItem.height\"\n    [style.minHeight.px]=\"currentStickyItem.height\"\n>\n    <ng-container [ngTemplateOutlet]=\"currentStickyItem.comp.temp\"></ng-container>\n</ag-vs-item>","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n   name: 'mathAbs'\n})\nexport class MathAbsPipe implements PipeTransform {\n\n   constructor() {}\n\n   transform(value: number) {\n      if (value)\n         return Math.abs(value);\n      return value;\n   }\n}","import { NgModule, } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AgVirtualSrollComponent } from './ag-virtual-scroll.component';\nimport { AgVsItemComponent } from './ag-vs-item/ag-vs-item.component';\nimport { MathAbsPipe } from './pipes/math-abs.pipe';\nimport { StickedClassesPipe } from './pipes/sticked-classes.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        AgVirtualSrollComponent,\n        AgVsItemComponent,\n\n        // Pipes\n        MathAbsPipe,\n        StickedClassesPipe\n    ],\n    exports: [\n        AgVirtualSrollComponent,\n        AgVsItemComponent\n    ],\n})\nexport class AgVirtualScrollModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.AgVsItemComponent","i3.StickedClassesPipe"],"mappings":"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"}